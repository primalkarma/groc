generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model categories {
  cat_id        String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cat_name      String          @unique
  cat_img       String          @unique
  subcategories subcategories[]
}

model order_items {
  order_item_id String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id      String   @db.Uuid
  product_id    String   @db.Uuid
  quantity      Int
  orders        orders   @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)
  products      products @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction)
}

model orders {
  order_id    String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String?       @db.Uuid
  order_date  DateTime      @default(now()) @db.Timestamp(6)
  status      Boolean
  order_items order_items[]
  users       users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  product_id     String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_name   String
  product_img    String
  unit           String
  subcategory_id String        @db.Uuid
  order_items    order_items[]
  subcategories  subcategories @relation(fields: [subcategory_id], references: [subcat_id], onDelete: Cascade, onUpdate: NoAction)
}

model subcategories {
  subcat_id   String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subcat_name String     @unique
  category_id String     @db.Uuid
  products    products[]
  categories  categories @relation(fields: [category_id], references: [cat_id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name   String
  email  String   @unique
  orders orders[]
}
